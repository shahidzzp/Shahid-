# -*- coding: utf-8 -*-
"""traffic.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19Jda1L-HA5lOU5pdGTJmRwJTkj5D8Cmi
"""

from google.colab import files
import pandas as pd
uploaded = files.upload()
df = pd.read_csv(next(iter(uploaded)))
df.head()

# prompt: give me a code to get bargraph for the above csv file from the basis of rain_intensity

import matplotlib.pyplot as plt
df.groupby('rain_intensity')['rain_intensity'].count().plot(kind='bar')
plt.show()

# prompt: give me a code to get line graph for the above csv file in the basis of trafffic_fine_amount

import matplotlib.pyplot as plt
df.groupby('traffic_fine_amount')['traffic_fine_amount'].count().plot(kind='line')
plt.show()

# prompt: give me a code to get bargraph for the above csv file in the basis of trafffic_fine_amount

import matplotlib.pyplot as plt
df.groupby('traffic_fine_amount')['traffic_fine_amount'].count().plot(kind='bar')
plt.show()

# prompt: give me a code to get finitegraph for the above csv file from the basis of any siutable data

import pandas as pd
import networkx as nx

# Assuming your CSV has columns relevant to creating a graph,
# like 'source', 'target', and optionally 'weight'.
# Replace these with your actual column names if different.

def create_finite_graph_from_csv(df):
  """Creates a finite graph from a Pandas DataFrame.

  Args:
    df: Pandas DataFrame with 'source', 'target', and optionally 'weight' columns.

  Returns:
    A NetworkX graph object.
  """

  graph = nx.Graph()  # Or nx.DiGraph() for a directed graph

  for index, row in df.iterrows():
      source = row['source']  # Replace 'source' with your actual column name
      target = row['target']  # Replace 'target' with your actual column name

      if 'weight' in df.columns:  # Check if 'weight' column exists
          weight = row['weight']
          graph.add_edge(source, target, weight=weight)  # Add edge with weight
      else:
          graph.add_edge(source, target)  # Add edge without weight

  return graph

# Example usage:
# Assuming 'df' is your pandas DataFrame read from the CSV
# finite_graph = create_finite_graph_from_csv(df)

# If you want to visualize the graph:
# import matplotlib.pyplot as plt
# nx.draw(finite_graph, with_labels=True)
# plt.show()


# Example with dummy data:
# if you do not have a source and target columns
# You can change the dummy data with a meaningful one according to your actual dataframe
data = {'source': [1, 2, 3, 1, 2], 'target': [2, 3, 1, 3, 1], 'weight': [1,2,3,4,5]}
df_dummy = pd.DataFrame(data)
finite_graph = create_finite_graph_from_csv(df_dummy)


import matplotlib.pyplot as plt
nx.draw(finite_graph, with_labels=True)
plt.show()

# prompt: give me a code to get histogram for the above csv file from the basis of traffic_density

import matplotlib.pyplot as plt

# Assuming 'df' is your DataFrame from the previous code

try:
  df['traffic_density'].hist(bins=10) # Adjust the number of bins as needed
  plt.xlabel('Traffic Density')
  plt.ylabel('Frequency')
  plt.title('Histogram of Traffic Density')
  plt.show()
except KeyError:
  print("Error: 'traffic_density' column not found in the DataFrame.")

